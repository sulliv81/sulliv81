1. Bo Sullivan

2. I think all things are working and compiling and running as anticipated. I also believe threading is fine. I will note however, when I compile the client file with -Wall, it claims I have an unused variable, which I have checked multiple times and it is absolutely in use for my send calls. 

3. How tested program here, probably forking discussion. Testing the program was quite the challenge initially. Upon using the initial demo code provided to us from the helpful canvas links, I was able to get a baseline server/client model connected and communicating rather quick. Once I was at this point, I started to implement some back and forth logic with loops and recv and send. I then coded an auxilliary helper method to get a guess from the user on client side. I also refined all my logic to make sure they were int16_t at this point and not ints as Brian mentioned in class to caution this as his server expects certain data types. 
Once I got here, I spent admittedly too long in a loop of being able to send a guess to the server, receive the response of too low/high etc, but then not be able to send a response back. Longest story short, I had been calling server side to close on the socket in the wrong loop (so too soon) which caused the game to end after 1 guess no matter what. With help in office hours from Dan, I was able to refine the thought process of my recv and send calls so it all had a flow that made sense and that opened up the gates to testing to make sure the secret number was changing as needed, game reset as needed, and restarted as needed as well as giving the appropriate replies per each guess. Then forking, luckily I had some examples from 347 to rely off of and it made the implementation not too bad, just the placement server side was tricky until I realized it needed to happen once the game is started by the server and the connection made from client.

4. Most challenging aspect and why? For me, I got too caught up in the demo code we had available which made me jump some thought processes and the full understanding of what was going on, which in turn had me closing my connection to client prematurely which gave the most trouble during this assignment. Another issue which ended up being trivial in hindsight was when I was checking the user input to the hidden number on the server, I was casting it to unsigned char, which of course ruined the flow of the game. Once I set it to be a type of int16_t and changed recv calls to receive that correct amount of bytes, it instantly made sense what was going on, and why my game was not working with negative values. I also had fears about threading, but I think it worked rather well and was an easy implementation. Besides this, other challenging aspects were the typcial go round  you tend  to have with see. Your usual improper casts, using wrong variable types in expressions, and calling methods incorrectly. There were also other times, things were working as intended but I didn't think so, so over-examined an issue and lost a little time. Also, per my understanding from piazza, https://piazza.com/class/kjc2xrsu4aqz9?cid=32 , you should be exiting the server with ^C, which I thought initially to be my mistake once I had implemented forking I had to always close server this way and spent awhile trying to manipulate that.

