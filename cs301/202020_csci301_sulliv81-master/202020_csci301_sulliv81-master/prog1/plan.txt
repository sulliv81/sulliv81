1) We are being asked to implement predicate logic. We need to be able to functionally program the universal and existential quanitifiers with DrRacket. So it seems like we will cross reference lists with our predicate-logic method that we must create to check if things are or are not in existence in a list. It will be similar to truth tables and their expressions, just with more in depth logic in terms of functionality with DrRacket.
2) I think implementing the predicate-logic function itself is going to be highly difficult for me. I do not have much familiarity with programming functionally, or Racket. Perhaps once I am able to write out this function, it will make creating the expressions somewhat easier. I also anticipate the expressions to be difficult to, for my current skill level with racket. I think the concept of coding predicate logic is new and something that I will have to grasp quickly too, as I am used to only writing it with pen and paper where it is seemingly easier to manipulate.
3) I am hoping that creating the truth-table and the logic involved in terms of functional programming can serve some use here. I am sure I will need to make use of map and lambda function definitions. I am also wondering and thinking it's likely I can make use of curry functions that Alex A. was teaching in an extra-curricular zoom/racket session. It looks like I will also be making use of implies.
4) At least 3 resources I will likely make use are as follows: A) I will definitely be attending extra racket sessions hosted by Alex A. B) I will email the instructor, Dr. Hutchinson when possible for clarifications. C) I will reach out for advice via Piazza D) I will absolutely be making use of CS Mentor hours Monday through Friday from 4-7 pm. E) I will also try to hunt for tips during QA sessions if possible via Zoom.